name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  verify:
    name: Verify if the template was applied
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "cookiecutter.json"
      - name: File not exists
        if: steps.check_files.outputs.files_exists == 'false'
        # Only runs if the template config file not exists
        run: echo template config file not exists!
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [verify]
    if: needs.verify.outputs.files_exists == 'false'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # Generate a template to convert Trivy Report to Sonarcloud compatible format
      - run: |
          echo "APP_PATH=$(grep -rnwl src/main -e '@SpringBootApplication')" >> $GITHUB_ENV
      - run: |
          echo '{ "issues": [
            {{- $t_first := true }}
            {{- range . }}
            {{- $target := .Target }}
              {{- range .Vulnerabilities -}}
              {{- if $t_first -}}
                {{- $t_first = false -}}
              {{ else -}}
                ,
              {{- end }}
              {
                "engineId": "trivy",
                "ruleId": "security_scanning",
                "severity":{{ if eq .Severity "LOW" -}}
                                               "INFO"
                                             {{- else if eq .Severity "MEDIUM" -}}
                                               "MINOR"
                                             {{- else if eq .Severity "HIGH" -}}
                                               "MAJOR"
                                             {{- else if eq .Severity "CRITICAL" -}}
                                               "CRITICAL"
                                             {{-  else -}}
                                               "INFO"
                                             {{- end }},
                "type":"VULNERABILITY",
                "primaryLocation": {
                  "message": {{ .Description | printf "%q" }},
                  "filePath": "'$APP_PATH'"
                }
              }
              {{- end -}}
            {{- end -}}
          ]}' > sonar.tpl
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar       
      # Generate Bill of Materials (BOM) file with dependencies
      - name: generate dependencies BOM
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_USERNAME: ${{ secrets.CI_GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        with:
          gradle-version: 6.9
          arguments: build cyclonedxBom
      # Run trivy over the BOM file and generate a Sonarcloud compatible report
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'sbom'
          image-ref: '/github/workspace/build/reports/bom.json'
          format: 'template'
          output: 'trivy-report.json'
          template: '@/github/workspace/sonar.tpl'
          security-checks: 'vuln'
          exit-code: '0'
          ignore-unfixed: false   
      - name: Build and test
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_USERNAME: ${{ secrets.CI_GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          gradle-version: 6.9
          arguments: build jacocoTestReport sonar --info


plugins {
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
    id 'org.sonarqube' version '3.5.0.2730'
    id 'org.cyclonedx.bom' version '1.7.2'
    id "name.remal.integration-tests" version "3.0.0"
    id 'info.solidsoft.pitest' version '1.9.11'
}

sonarqube {
    properties {
        property "sonar.projectKey", "modyo_state-machine-test"
        property "sonar.organization", "enmala"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.exclusions", "**/**Application*, **/*Config*, **/**Mapper*, **/**Abstract*"
        property "sonar.externalIssuesReportPaths", "trivy-report.json"
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenLocal()
    mavenCentral()
    maven {
        name = 'GitHubPackages'
        url = 'https://maven.pkg.github.com/modyo/maven-packages'
        credentials {
            username = System.getenv("GITHUB_USERNAME")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

group = 'com.modyo.test.statemachine'
version = '1.0.0'

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply from: 'gradle/jacoco.gradle'

pitest {
    //adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
    junit5PluginVersion = '1.1.2'
    mutators = ['DEFAULTS','-VOID_METHOD_CALLS']
    testSourceSets = [sourceSets.test, sourceSets.integration]
    excludedClasses = ['*Application*','*Config*', '*Mapper*', '*Abstract*']
    mutationThreshold = 75
    //threads = 4
    historyInputLocation = 'build/.pitHistory'
    historyOutputLocation = 'build/.pitHistory'
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencyManagement {
    imports {
        // For Spring Boot
        mavenBom 'org.springframework.boot:spring-boot-dependencies:2.7.8'
        // For Spring Cloud - OpenFeign
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.5"
    }
}

configurations {
    all {
        /* only junit 5 should be used */
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
dependencies {

    // Spring Boot Framework
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Modyo Microservices Commons
    implementation 'com.modyo.ms.commons:core:2.10.2-RELEASE'
    implementation 'com.modyo.ms.commons:http:2.10.2-RELEASE'
    implementation 'com.modyo.ms.commons:audit:2.10.2-RELEASE'
    implementation 'com.modyo.ms.commons:aws-api-gw:2.10.2-RELEASE'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.swagger:swagger-annotations:1.6.9'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Spring Statemachine
    implementation 'org.springframework.statemachine:spring-statemachine-starter:3.2.0'

    // OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Mapstruts
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

    // Security Updates
    implementation 'org.yaml:snakeyaml:1.33'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.69'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    implementation 'org.bouncycastle:bcutil-jdk15on:1.69'


    // Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'com.tngtech.archunit:archunit:0.23.1'
    // MockServer for Integration Tests
    testImplementation 'org.mock-server:mockserver-junit-jupiter-no-dependencies:5.14.0'
}

tasks.withType(Test).configureEach {
    systemProperty 'file.encoding', 'utf-8'
    useJUnitPlatform()
}

testSourceSets {
    integration
}

// slug size reduction for Heroku deployment
task stage {
    dependsOn build
    doLast {
        delete fileTree(dir: "build", exclude: "libs")
        delete fileTree(dir: "build/libs", exclude: "*.jar")
    }
}
